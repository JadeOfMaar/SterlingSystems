@PART[strl-eng-*-suleu]:HAS[@RESOURCE[EnrichedUranium]]:NEEDS[SystemHeatFissionEngines]
{
	refPowerAScale = #$MODULE[ModuleEnginesFX],0/atmosphereCurve/key,0[1, ]$ // get vac Isp number
	@refPowerAScale /= 800 // Squad NERV
	
	refPowerBScale = #$MODULE[ModuleEnginesFX],0/maxThrust$ // get max thrust number
	@refPowerBScale /= 60 // Squad NERV
	
	@refPowerAScale *= #$refPowerBScale$
	
	// precision sequence to keep div number at 2dp and not let it be 12+dp
	@refPowerAScale += 0.005
	@refPowerAScale *= 100
	@refPowerAScale = #$refPowerAScale[0,.]$ // regex truncate, unknown behavior but used in RO
	@refPowerAScale /= 100
	
	@MODULE[ModuleEngines*]
	{
		@heatProduction = 0
	}
	MODULE
	{
		name = ModuleSystemHeat
		volume = #$/mass$
		@volume /= 3
		moduleID = engine
		iconName = Icon_Nuclear
	}
	MODULE
	{
		name = ModuleSystemHeatFissionEngine
		moduleID = engine
		uiGroupDisplayName = #LOC_SystemHeat_ModuleSystemHeatFissionEngine_UIGroup_Title

		allowHibernate = false
		allowManualControl = false 
		allowManualShutdownTemperatureControl = false

		// -- Heat stuff
		// ModuleSystemHeat instance to link to
		systemHeatModuleID = engine
		// Heat kW
		HeatGeneration
		{
			key = 0 0
		} 
		// Above this temp, risky
		NominalTemperature = 800
		// Above this temp, reactor takes damage
		CriticalTemperature = 1300
		// Amount of damage taken by core when over critical temp
		// %/s/K, so with value 0.001, at 200 K over CriticalTemp, reactor takes 0.2% damage/s
		CoreDamageRate = 0.01


		// -- Reactor throttle stuff
		ThrottleIncreaseRate = 10
		MinimumThrottle = 0
		ThrottleDecreaseRate = 20


		// -- Electrical stuff
		// Power generated
		GeneratesElectricity = false

		// --- Fuel stuff
		// Base lifetime calculations off this resource
		FuelName = EnrichedUranium

		// -- engine stuff
		ispCurve
		{
			key = 0 0.01
			key = 100 1.0
		}
		engineCoolingScale = 1.0

		INPUT_RESOURCE
		{   
			ResourceName = EnrichedUranium
			Ratio = 0.00027
			FlowMode = NO_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = DepletedFuel
			Ratio = 0.00027
			DumpExcess = false
			FlowMode = NO_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = ThermalPower
			Ratio = 76.45
			DumpExcess = true
			FlowMode = ALL_VESSEL
		}
	}
	MODULE
	{
		name = ModuleSystemHeatFissionFuelContainer
		EngineerLevelForTransfer = 3
		ResourceNames = EnrichedUranium, DepletedFuel
	}
}

// Gas core NTR
@PART[strl-eng-375-?cgc]:HAS[@RESOURCE[EnrichedUranium]]:NEEDS[SystemHeatFissionEngines]
{
	refPowerAScale = #$MODULE[ModuleEnginesFX],0/atmosphereCurve/key,0[1, ]$ // get vac Isp number
	@refPowerAScale /= 1625 // Kerbal Atomics 2.5m GCNTR Vac Isp
	
	refPowerBScale = #$MODULE[ModuleEnginesFX],0/maxThrust$ // get max thrust number
	@refPowerBScale /= 820
	
	@refPowerAScale *= #$refPowerBScale$
	
	// precision sequence to keep div number at 2dp and not let it be 12+dp
	@refPowerAScale += 0.005
	@refPowerAScale *= 100
	@refPowerAScale = #$refPowerAScale[0,.]$ // regex truncate, unknown behavior but used in RO
	@refPowerAScale /= 100
	
	!MODULE[ModuleAlternator] {}
	@MODULE[ModuleEngines*],*
	{
		@heatProduction = 0
	}
	MODULE
	{
		name = ModuleSystemHeat
		volume = #$/mass$
		@volume /= 3
		moduleID = engine
		iconName = Icon_Nuclear
	}
	MODULE
	{
		name = ModuleSystemHeatFissionEngine
		moduleID = engine
		uiGroupDisplayName = #LOC_SystemHeat_ModuleSystemHeatFissionEngine_UIGroup_Title

		allowHibernate = false
		allowManualControl = false 
		allowManualShutdownTemperatureControl = false

		// -- Heat stuff
		// ModuleSystemHeat instance to link to
		systemHeatModuleID = engine
		// Heat kW
		HeatGeneration
		{
			key = 0 0
		} 
		// Above this temp, risky
		NominalTemperature = 1200
		// Above this temp, reactor takes damage
		CriticalTemperature = 1400
		// Amount of damage taken by core when over critical temp
		// %/s/K, so with value 0.001, at 200 K over CriticalTemp, reactor takes 0.2% damage/s
		CoreDamageRate = 0.01


		// -- Reactor throttle stuff
		ThrottleIncreaseRate = 10
		MinimumThrottle = 0
		ThrottleDecreaseRate = 20


		// -- Electrical stuff
		// Power generated
		GeneratesElectricity = false

		// --- Fuel stuff
		// Base lifetime calculations off this resource
		FuelName = EnrichedUranium

		// -- engine stuff
		ispCurve
		{
			key = 0 0.01
			key = 100 1.0
		}
		engineCoolingScale = 1.0

		INPUT_RESOURCE
		{   
			ResourceName = EnrichedUranium
			Ratio = 0.002
			@Ratio *= #$/refPowerAScale$
			FlowMode = NO_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = DepletedFuel
			Ratio = 0.002
			@Ratio *= #$/refPowerAScale$
			DumpExcess = false
			FlowMode = NO_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = ThermalPower
			Ratio = 566.26
			@Ratio *= #$/refPowerAScale$
			DumpExcess = true
			FlowMode = ALL_VESSEL
		}
	}
	MODULE
	{
		name = ModuleSystemHeatEngine
		// must be unique
		moduleID = engineHeat
		// ModuleSystemHeat to link to
		systemHeatModuleID = reactor
		// in KW at peak output
		systemPower = 2000
		@systemPower *= #$/refPowerAScale$

		// Nominal system output temperature
		systemOutletTemperature = 1200

		shutdownTemperature = 1400
		// Valid system temperature range
		temperatureCurve
		{
			key = 0 1.0
			key = 1000 1.0
			key = 2000 0.0
		}
	}
	MODULE
	{
		name = ModuleSystemHeatFissionFuelContainer
		EngineerLevelForTransfer = 3
		ResourceNames = EnrichedUranium, DepletedFuel
	}
}